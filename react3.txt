React project structure 
=======================

myapp1
|
|---node_modules 
|
|---public
	|
	|--- index.html 
	|--- manifest.json
	|--- favicon.ico 
|
|------src
	|
	|--- index.js 
	|--- index.css
	|
	|--- App.js
	|--- App.css 
	|--- App.test.js

|
|---package.json
|---README.md

A "myapp1" is  react application name.

A "node_modules" contains packages and dependencies installed.

A "index.html" is a main template of react application.

A "manifest.json" file contains metadata which is used when web application installed in
user's computer or laptop or mobile.

A "favicon.ico" is a favourite icon.

A "App.css" file is related to App.js and it is global.

A "App.js" is a parent component.

A "App.test.js" file is for unit testing.

A "index.css" file is releated to index.js and it is global.

A "index.js" is a entry point.

A "package.json" file contains dependencies which we used in our project along with their version.



React Second Application Development
====================================

project structure
-----------------
myapp2
|
|---node_modules 
|
|---public
	|
	|--- index.html 
	|--- manifest.json
	|--- favicon.ico 
|
|------src
	|
	|--- index.js 
	|--- index.css
	|
	|--- App.js
	|--- App.css 
	|--- App.test.js

|
|---package.json
|---README.md

step1:
------
	Create a react application i.e myapp2
	ex:
		Reactprojects>  npx  create-react-app  myapp2

step2:
-----
	Open the VSC editor.
	ex:
		Reactprojects> code  . 

step3:
-----
	Switch to the project.
	ex:
		Reactprojects> cd   myapp2

step4:
------
	Run react application.
	ex:
		Reactprojects/myapp2>  npm start 

step5:
------
	Test the application by using below request url.
	ex:
		http://localhost:3000/

step6:
------	
	Goto App.js file and create custom logic.

App.js
-------
function App()
{
  return (
    <h1>Welcome to React</h1>
  )
}
export default App;


step7:
------	
	Goto index.js file and perform following changes.

index.js
--------
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();


React Fragment
===============
By default every react component returns only one element at a time.

To return more then one element in a react component we need to use react fragment.

A React fragment is a feature that allows developers to group multiple elements in a React component without adding extra nodes to the DOM. 

ex:
---

function App()
{
  return (

    <div>
        <h1>Welcome to React</h1>
        <h1>Welcome to IHUB </h1>
    </div>
  )
}
export default App;

In the above example we are adding extra node to the DOM and it is not recommanded.


ex:
---
import React from 'react';
function App()
{
  return (

    <React.Fragment>
        <h1>Welcome to React</h1>
        <h1>Welcome to IHUB </h1>
    </React.Fragment>
  )
}
export default App;

or

ex:
---
import {Fragment} from 'react';
function App()
{
  return (

    <Fragment>
        <h1>Welcome to React</h1>
        <h1>Welcome to IHUB </h1>
        <p> Welcome to QT </p>
    </Fragment>
  )
}
export default App;

or

ex:
---

function App()
{
  return (
    <>
        <h1>Welcome to React</h1>
        <h1>Welcome to IHUB </h1>
        <p> Welcome to QualityThought </p>
    </>
  )
}
export default App;















